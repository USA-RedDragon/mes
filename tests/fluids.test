#! /bin/sh
# -*-scheme-*-
MES=${MES-$(dirname $0)/../src/mes}
$MES -s $0
exit $?
!#

;;; -*-scheme-*-

;;; Mes --- Maxwell Equations of Software
;;; Copyright Â© 2016 Jan (janneke) Nieuwenhuizen <janneke@gnu.org>
;;;
;;; This file is part of Mes.
;;;
;;; Mes is free software; you can redistribute it and/or modify it
;;; under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 3 of the License, or (at
;;; your option) any later version.
;;;
;;; Mes is distributed in the hope that it will be useful, but
;;; WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with Mes.  If not, see <http://www.gnu.org/licenses/>.

(mes-use-module (mes fluids))
(mes-use-module (mes test))

(define a (make-fluid))
(define b (make-fluid))
(define c #f)

(pass-if "fluid?" (fluid? a))
(pass-if-not "fluid? not" (fluid? c))
(pass-if-not "fluid-ref"
             (fluid-ref a))

(pass-if "with-fluid*"
  (with-fluid* a #t (lambda () (fluid-ref a))))

(pass-if-not "with-fluid* reset"
             (begin
               (with-fluid* a #t (lambda () (fluid-ref a)))
               (fluid-ref a)))

;; (pass-if-equal "with fluids*"
;;     0 (with-fluids* (list a b) '(0 1)
;;                     (lambda () (fluid-ref a))))

(pass-if-equal "with-fluids"
    0 (with-fluids ((a 1)
                    (a 2)
                    (a 3))
        (fluid-set! a 0)
        (fluid-ref a)))

(pass-if-equal "with-fluids" ; FIXME: fails with Mes
    #f (begin
         (with-fluids ((a 1)
                       (b 2))
           (fluid-set! a 0)
           (display "X:") (display (fluid-ref a)) (newline))
         (fluid-ref a)))

(result 'report (if mes? 1 0))
