                                                              -*- org -*-
Mes -- Maxwell Equations of Software

Mes aims to create full source bootstrapping for GuixSD: an entirely
source-based bootstrap path.  The target is to [have GuixSD] boostrap
from a minimal, easily inspectable binary --that should be readable as
source-- into something close to R6RS Scheme.

It currently consists of a mutual self-hosting [close to Guile-]
Scheme interpreter prototype in C and a Nyacc-based C compiler in
[Guile] Scheme.

The Scheme interpreter prototype (mes.c) has a Garbage Collector, a
library of loadable Scheme modules-- notably [[https://github.com/schemeway/lalr-scm][Dominique Boucher's LALR]],
[[https://www.cs.indiana.edu/chezscheme/syntax-case/old-psyntax.html][Pre-R6RS portable syntax-case]] with R7RS ellipsis, [[http://www.nongnu.org/nyacc/][Matt Wette's Nyacc]]
and [[https://www.gnu.org/software/guile/docs/master/guile.html/PEG-Parsing.html][Guile's PEG]] --and test suite just barely enough to support a
simple REPL (repl.mes) and simple C-compiler (mescc.mes) that can
produce the second initial ELF binary from binary from mes.c, in only
about 2h30'.

Mes is inspired by The Maxwell Equations of Software: [[http://www.softwarepreservation.org/projects/LISP/book/LISP%25201.5%2520Programmers%2520Manual.pdf][LISP-1.5]] -- John
McCarthy page 13, [[https://www.gnu.org/software/guix/][GNU Guix's]] source/binary packaging transparency and
[[https://github.com/oriansj/stage0][Jeremiah Orians's stage0]] bootstrap project.

Mes is free software, it is distributed under the terms of the GNU
General Public Licence version 3 or later.  See the file COPYING.

* Get it

   git clone https://gitlab.com/janneke/mes

* Build it (see INSTALL for full instructions)

   ./configure
   make all
   make check

* REPL it

   scripts/repl.mes

* Mescc compiler

   scripts/mescc.mes doc/examples/main.c > a.out

